===========================????==============================================
    ··认为在安装mitmporxy包的运行模式同在pycharm调试代码的运行模式根本原理相同
    ·
        todo: 做到从pycharm成功运行mitmweb和mitmdump
            1.我意识到，程序运行过程中，很多参数、变量依赖sys.***。
                也就是说，要想在pycharm中正确运行，需要：
                    正确处理与模块sys及其变量sys.***相关的语句、变量即可！
===========================????==============================================


············
············

---------------------------20181020----------------------------------------------
··分析了参数解析过程，明确了pycharm下启动程序的时候如何传参
---------------------------20181020----------------------------------------------
1.mitmproxy两种安装方式的区别和区分
    a.安装 mitmproxy 工具”
        如果只是拿 mitmproxy 做一个替代 fiddler 的工具，没有什么定制化的需求，
        那完全只需要“安装 mitmproxy 工具”即可，去 mitmproxy 官网 上下载一个 installer 便可开箱即用
        ，不需要提前准备好 python 开发环境。
        ·特点:
            * 运行时，会有一个cmd的窗口，但是不输出python的那种错误堆栈信息，源代码中的print信息会输出
                日志信息(估计)也输出。
            * 在cmd窗口直接使用mitmweb、mitmdump命令,会主动将程序添加到环境变量。

    b.安装 python 的 mitmproxy 包
        需要提前准备好 python 开发环境(目前要求不低于3.6),安装 python 的 mitmproxy 包
        除了会得到 mitmproxy 工具外，还会得到开发定制脚本所需要的包依赖，其安装过程并不复杂。
        ·特点:
            * 输出python的那种错误堆栈信息。源代码中的print信息会输出,日志信息(估计)也输出。
            * 在cmd窗口直接使用mitmweb、mitmdump命令,会主动将程序添加到环境变量。
2.关于python mitmproxy包运行方式的猜测：
    通过对比installer，感觉installer是编译好的二进制文件，所以不需要python解释器。
    mitmporxy包，运行时需要的文件都是.py格式的，运行到哪里，就调用哪个文件给解释器执行。
    ··故，认为在安装mitmporxy包的运行模式同在pycharm调试代码的运行模式根本原理相同。

---------------------------20181020----------------------------------------------
---------------------------20181015----------------------------------------------
todo: 1.通过help参数，发现输出的日志可以分不同的详细等级，测试一下看看。
      2.测试下quiet、options、commands几个参数。
      3.找一下日志文件的位置。

·在mitmproxy\tools文件夹中，_main.py和cmdline.py中找到了
    名为mitmdump、mitmproxy、mitmweb的函数。
    看能不能以此作为切入点，弄清程序的运行流程
---------------------------20181015----------------------------------------------

